name: build and zip

on:
  push:
    tags: ['*']

jobs:

  build:
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: build the solution
      run: msbuild gitrelease.sln /m /restore /verbosity:normal /p:Configuration=Release
     
    - name: Get Version Number
      id: get_version_number
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash
      
    - name: Pack Assets
      id: pack_assets
      run: |
        $ErrorView = 'NormalView'
        $env:ASSET_FILE_NAME = "gitrelease.${{ steps.get_version_number.outputs.VERSION }}.zip"
        $env:ASSET_FILE = "gitrelease/bin/gitrelease.${{ steps.get_version_number.outputs.VERSION }}.zip"
        echo "$env:ASSET_FILE"
        Compress-Archive -Path gitrelease/bin/Release/netcoreapp3.1/*.dll -DestinationPath $env:ASSET_FILE -CompressionLevel Optimal
        echo "::set-output name=ASSET_FILE::$env:ASSET_FILE"
        echo "::set-output name=ASSET_FILE_NAME::$env:ASSET_FILE_NAME"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version_number.outputs.VERSION }}
        draft: false
        prerelease: false